HALT ;dont remove me!

MSTART:	MOV #110000, R0		;R0=romOffset
	MOV #40000, R1		;R1=vramOffset

MWHILE:	MOV (R0)+, R2		;R2=curCnt

	TST R2			;while (curCnt != 0)
	BEQ MWEND

	MOV (R0)+, R3		;R3=curWord
				;for(i=0; i<curCnt; i++)
MFOR:	MOV R3, (R1)+ 		;set vram addr
	DEC R2			
	TST R2			
	BNE MFOR		
	
	BR MWHILE		

MWEND:	MOV #60, R2
	MOV 0, R3
	MOV 0, R4		
	JSR R5, SSTART
	HALT
	




	HALT; Protector before subroutines

;subroutine	: Print Symbol to vram
;call		: JSR R5, SSTART
;arguments	: R3: x in 0..31 (word align), R4: y in 0..255 (pixel align), R2: letter code in ASCII
;destroyed	: R0, R1, R2
SSTART:	SUB #41, R2		;first 33(041) ASCII symbols are skipped
	ASH #5, R2		;R2=R2*32 -- skip R2 symbols
	ADD #140000, R2		;fonts start

	MOV R4, R0
	ASH #6, R0		;64*y (byte length of line)
	ADD R3, R1		
	ADD R3, R1		;64*y+2*x is start of vram where letter is
	ADD #40000, R0		;vram start

;Next step is loading symbol onto the right place
;Symbol length width is 8 pixel = 16 bits = 1 word
;That is why after writing one word, we should move to another line that
;is placed in 256/4=64 bytes. Symbol takes 16 words
SFOR:	MOV #20, R1		;We should load 16(020) words in vram
	MOV (R2)+, (R0)		;write word to vram = 1 line of symbol
	ADD #100, R0		;move to next line (skip 64(040) bytes)
	DEC R1
	TST R1
	BNE SFOR
	
	RTS R5

